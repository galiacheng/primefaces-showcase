<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="./template.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .logo {
            }

            .detail {
                width: 200px;
                padding-left: 25px;
            }

            .command {
                padding-left: 25px;
            }

            ul.ui-datalist-data {
                padding-inline-start: 0px;
            }
        </style>
    </ui:define>

    <ui:define name="title">
        DataList - <span class="subitem">MultiViewState</span>
    </ui:define>

    <ui:define name="description">
        MultiViewState feature enables DataList to maintain its state across pages by setting multiViewState attribute to true. In this demo, manipulate use pagination, then visit another page and then come back to this page. DataList state should remain as you've left it.
    </ui:define>

    <ui:param name="documentationLink" value="/components/datalist"/>

    <ui:define name="implementation">
        <div class="card">
            <h:form id="form">
                <p:messages id="messages"/>

                <p:commandButton value="Clear multiViewSate" action="#{dataListView.clearMultiViewState}"
                                 update="@form"/>

                <br/><br/>

                <p:dataList value="#{dataListView.products3}" var="product" id="productList" type="unordered" itemType="none"
                            multiViewState="true" style="width:600px"
                            paginator="true" rows="5" pageLinks="5"
                            paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}">
                    <h:panelGrid columns="3" columnClasses="logo,detail,command">
                        <p:graphicImage name="demo/images/product/#{product.image}"/>

                        <p:outputPanel>
                            <h:panelGrid columns="2" cellpadding="5">
                                <h:outputText value="Id:"/>
                                <h:outputText value="#{product.id}" style="font-weight: bold"/>

                                <h:outputText value="Name:"/>
                                <h:outputText value="#{product.name}" style="font-weight: bold"/>

                                <h:outputText value="Price:"/>
                                <h:outputText value="$#{product.price}" style="font-weight: bold"/>
                            </h:panelGrid>
                        </p:outputPanel>

                        <p:commandLink update=":form:productDetail" oncomplete="PF('productDialog').show()" title="View Detail">
                            <h:outputText styleClass="ui-icon pi pi-search" style="margin:0 auto;"/>
                            <f:setPropertyActionListener value="#{product}" target="#{dataListView.selectedProduct}"/>
                        </p:commandLink>
                    </h:panelGrid>
                </p:dataList>

                <p:dialog header="Product Info" widgetVar="productDialog" modal="true" showEffect="blind" hideEffect="explode"
                          resizable="false">
                    <p:outputPanel id="productDetail" style="text-align:center;">
                        <p:panelGrid columns="2" rendered="#{not empty dataListView.selectedProduct}"
                                     columnClasses="label,value">
                            <f:facet name="header">
                                <p:graphicImage name="demo/images/product/#{dataListView.selectedProduct.image}"/>
                            </f:facet>

                            <h:outputText value="Id:"/>
                            <h:outputText value="#{dataListView.selectedProduct.id}"/>

                            <h:outputText value="Name:"/>
                            <h:outputText value="#{dataListView.selectedProduct.name}"/>

                            <h:outputText value="Price:"/>
                            <h:outputText value="$#{dataListView.selectedProduct.price}"/>

                            <h:outputText value="Stock:"/>
                            <h:outputText value="#{dataListView.selectedProduct.inventoryStatus}"/>
                        </p:panelGrid>
                    </p:outputPanel>
                </p:dialog>
            </h:form>
        </div>
    </ui:define>

</ui:composition>